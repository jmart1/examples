/*
 * This file is generated by jOOQ.
 */
package com.github.jmart1.example.repo.service.model.tables.records;


import com.github.jmart1.example.repo.service.model.tables.Transactions;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TransactionsRecord extends UpdatableRecordImpl<TransactionsRecord> implements Record20<String, String, BigDecimal, String, String, Integer, Timestamp, String, Integer, Byte, Byte, Byte, String, Timestamp, Timestamp, String, Integer, String, BigDecimal, BigDecimal> {

    private static final long serialVersionUID = 1531435142;

    /**
     * Setter for <code>pacnode.transactions.account</code>.
     */
    public void setAccount(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>pacnode.transactions.account</code>.
     */
    public String getAccount() {
        return (String) get(0);
    }

    /**
     * Setter for <code>pacnode.transactions.address</code>.
     */
    public void setAddress(String value) {
        set(1, value);
    }

    /**
     * Create a detached TransactionsRecord
     */
    public TransactionsRecord() {
        super(Transactions.TRANSACTIONS);
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(String account, String address, BigDecimal amount, String bip125Replaceable, String blockhash, Integer blockindex, Timestamp blocktime, String category, Integer confirmation, Byte generated, Byte instantlock, Byte involveswatchonly, String label, Timestamp time, Timestamp timereceived, String txid, Integer vout, String walletconflicts, BigDecimal amountInUsd, BigDecimal usdExchangeRate) {
        super(Transactions.TRANSACTIONS);

        set(0, account);
        set(1, address);
        set(2, amount);
        set(3, bip125Replaceable);
        set(4, blockhash);
        set(5, blockindex);
        set(6, blocktime);
        set(7, category);
        set(8, confirmation);
        set(9, generated);
        set(10, instantlock);
        set(11, involveswatchonly);
        set(12, label);
        set(13, time);
        set(14, timereceived);
        set(15, txid);
        set(16, vout);
        set(17, walletconflicts);
        set(18, amountInUsd);
        set(19, usdExchangeRate);
    }

    /**
     * Getter for <code>pacnode.transactions.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(2);
    }

    /**
     * Getter for <code>pacnode.transactions.address</code>.
     */
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pacnode.transactions.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(2, value);
    }

    /**
     * Setter for <code>pacnode.transactions.blockhash</code>.
     */
    public void setBlockhash(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>pacnode.transactions.bip125-replaceable</code>.
     */
    public String getBip125Replaceable() {
        return (String) get(3);
    }

    /**
     * Setter for <code>pacnode.transactions.blockindex</code>.
     */
    public void setBlockindex(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>pacnode.transactions.blockindex</code>.
     */
    public Integer getBlockindex() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>pacnode.transactions.bip125-replaceable</code>.
     */
    public void setBip125Replaceable(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>pacnode.transactions.blockhash</code>.
     */
    public String getBlockhash() {
        return (String) get(4);
    }

    /**
     * Setter for <code>pacnode.transactions.category</code>.
     */
    public void setCategory(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>pacnode.transactions.blocktime</code>.
     */
    public Timestamp getBlocktime() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>pacnode.transactions.confirmation</code>.
     */
    public void setConfirmation(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>pacnode.transactions.confirmation</code>.
     */
    public Integer getConfirmation() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>pacnode.transactions.blocktime</code>.
     */
    public void setBlocktime(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>pacnode.transactions.generated</code>.
     */
    public Byte getGenerated() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>pacnode.transactions.instantlock</code>.
     */
    public void setInstantlock(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>pacnode.transactions.instantlock</code>.
     */
    public Byte getInstantlock() {
        return (Byte) get(10);
    }

    /**
     * Getter for <code>pacnode.transactions.category</code>.
     */
    public String getCategory() {
        return (String) get(7);
    }

    /**
     * Getter for <code>pacnode.transactions.involvesWatchonly</code>.
     */
    public Byte getInvolveswatchonly() {
        return (Byte) get(11);
    }

    /**
     * Setter for <code>pacnode.transactions.label</code>.
     */
    public void setLabel(String value) {
        set(12, value);
    }

    /**
     * Setter for <code>pacnode.transactions.generated</code>.
     */
    public void setGenerated(Byte value) {
        set(9, value);
    }

    /**
     * Setter for <code>pacnode.transactions.involvesWatchonly</code>.
     */
    public void setInvolveswatchonly(Byte value) {
        set(11, value);
    }

    /**
     * Getter for <code>pacnode.transactions.time</code>.
     */
    public Timestamp getTime() {
        return (Timestamp) get(13);
    }

    /**
     * Setter for <code>pacnode.transactions.timereceived</code>.
     */
    public void setTimereceived(Timestamp value) {
        set(14, value);
    }

    /**
     * Getter for <code>pacnode.transactions.timereceived</code>.
     */
    public Timestamp getTimereceived() {
        return (Timestamp) get(14);
    }

    /**
     * Setter for <code>pacnode.transactions.txid</code>.
     */
    public void setTxid(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>pacnode.transactions.label</code>.
     */
    public String getLabel() {
        return (String) get(12);
    }

    /**
     * Setter for <code>pacnode.transactions.time</code>.
     */
    public void setTime(Timestamp value) {
        set(13, value);
    }

    /**
     * Getter for <code>pacnode.transactions.txid</code>.
     */
    public String getTxid() {
        return (String) get(15);
    }

    /**
     * Setter for <code>pacnode.transactions.walletconflicts</code>.
     */
    public void setWalletconflicts(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>pacnode.transactions.walletconflicts</code>.
     */
    public String getWalletconflicts() {
        return (String) get(17);
    }

    /**
     * Setter for <code>pacnode.transactions.amount_in_usd</code>.
     */
    public void setAmountInUsd(BigDecimal value) {
        set(18, value);
    }

    /**
     * Getter for <code>pacnode.transactions.amount_in_usd</code>.
     */
    public BigDecimal getAmountInUsd() {
        return (BigDecimal) get(18);
    }

    /**
     * Getter for <code>pacnode.transactions.vout</code>.
     */
    public Integer getVout() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>pacnode.transactions.vout</code>.
     */
    public void setVout(Integer value) {
        set(16, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>pacnode.transactions.usd_exchange_rate</code>.
     */
    public BigDecimal getUsdExchangeRate() {
        return (BigDecimal) get(19);
    }

    /**
     * Setter for <code>pacnode.transactions.usd_exchange_rate</code>.
     */
    public void setUsdExchangeRate(BigDecimal value) {
        set(19, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Transactions.TRANSACTIONS.ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Transactions.TRANSACTIONS.ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row20<String, String, BigDecimal, String, String, Integer, Timestamp, String, Integer, Byte, Byte, Byte, String, Timestamp, Timestamp, String, Integer, String, BigDecimal, BigDecimal> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Transactions.TRANSACTIONS.BIP125_REPLACEABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Transactions.TRANSACTIONS.BLOCKHASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Transactions.TRANSACTIONS.BLOCKINDEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row20<String, String, BigDecimal, String, String, Integer, Timestamp, String, Integer, Byte, Byte, Byte, String, Timestamp, Timestamp, String, Integer, String, BigDecimal, BigDecimal> valuesRow() {
        return (Row20) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Transactions.TRANSACTIONS.CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Transactions.TRANSACTIONS.CONFIRMATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field10() {
        return Transactions.TRANSACTIONS.GENERATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field11() {
        return Transactions.TRANSACTIONS.INSTANTLOCK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field12() {
        return Transactions.TRANSACTIONS.INVOLVESWATCHONLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return Transactions.TRANSACTIONS.LABEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Transactions.TRANSACTIONS.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Transactions.TRANSACTIONS.BLOCKTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return Transactions.TRANSACTIONS.TXID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field17() {
        return Transactions.TRANSACTIONS.VOUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field18() {
        return Transactions.TRANSACTIONS.WALLETCONFLICTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field14() {
        return Transactions.TRANSACTIONS.TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field15() {
        return Transactions.TRANSACTIONS.TIMERECEIVED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getAccount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field19() {
        return Transactions.TRANSACTIONS.AMOUNT_IN_USD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getBip125Replaceable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getBlockhash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getBlockindex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field20() {
        return Transactions.TRANSACTIONS.USD_EXCHANGE_RATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getCategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getConfirmation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component10() {
        return getGenerated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component11() {
        return getInstantlock();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component12() {
        return getInvolveswatchonly();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getLabel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component3() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getBlocktime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getTxid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component17() {
        return getVout();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component18() {
        return getWalletconflicts();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component14() {
        return getTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component15() {
        return getTimereceived();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getAccount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component19() {
        return getAmountInUsd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getBip125Replaceable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getBlockhash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getBlockindex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component20() {
        return getUsdExchangeRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getCategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getConfirmation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value10() {
        return getGenerated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value11() {
        return getInstantlock();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value12() {
        return getInvolveswatchonly();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getLabel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getBlocktime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getTxid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value17() {
        return getVout();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value18() {
        return getWalletconflicts();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value14() {
        return getTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value15() {
        return getTimereceived();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value1(String value) {
        setAccount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value2(String value) {
        setAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value19() {
        return getAmountInUsd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value4(String value) {
        setBip125Replaceable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value5(String value) {
        setBlockhash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value6(Integer value) {
        setBlockindex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value20() {
        return getUsdExchangeRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value8(String value) {
        setCategory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value9(Integer value) {
        setConfirmation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value10(Byte value) {
        setGenerated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value11(Byte value) {
        setInstantlock(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value12(Byte value) {
        setInvolveswatchonly(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value13(String value) {
        setLabel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value3(BigDecimal value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value7(Timestamp value) {
        setBlocktime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value16(String value) {
        setTxid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value17(Integer value) {
        setVout(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value18(String value) {
        setWalletconflicts(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value19(BigDecimal value) {
        setAmountInUsd(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value20(BigDecimal value) {
        setUsdExchangeRate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord values(String value1, String value2, BigDecimal value3, String value4, String value5, Integer value6, Timestamp value7, String value8, Integer value9, Byte value10, Byte value11, Byte value12, String value13, Timestamp value14, Timestamp value15, String value16, Integer value17, String value18, BigDecimal value19, BigDecimal value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value14(Timestamp value) {
        setTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value15(Timestamp value) {
        setTimereceived(value);
        return this;
    }
}
