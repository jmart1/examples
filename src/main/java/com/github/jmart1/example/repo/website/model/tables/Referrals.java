/*
 * This file is generated by jOOQ.
 */
package com.github.jmart1.example.repo.website.model.tables;


import com.github.jmart1.example.repo.website.model.Indexes;
import com.github.jmart1.example.repo.website.model.Keys;
import com.github.jmart1.example.repo.website.model.Pacnode;
import com.github.jmart1.example.repo.website.model.tables.records.ReferralsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Referrals extends TableImpl<ReferralsRecord> {

    /**
     * The reference instance of <code>pacnode.referrals</code>
     */
    public static final Referrals REFERRALS = new Referrals();
    private static final long serialVersionUID = -1164947628;
    /**
     * The column <code>pacnode.referrals.id</code>.
     */
    public final TableField<ReferralsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");
    /**
     * The column <code>pacnode.referrals.account_name</code>.
     */
    public final TableField<ReferralsRecord, String> ACCOUNT_NAME = createField("account_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");
    /**
     * The column <code>pacnode.referrals.referral_code</code>.
     */
    public final TableField<ReferralsRecord, String> REFERRAL_CODE = createField("referral_code", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");
    /**
     * The column <code>pacnode.referrals.total_referrals</code>.
     */
    public final TableField<ReferralsRecord, Integer> TOTAL_REFERRALS = createField("total_referrals", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column <code>pacnode.referrals.total_pac_paid</code>.
     */
    public final TableField<ReferralsRecord, BigDecimal> TOTAL_PAC_PAID = createField("total_pac_paid", org.jooq.impl.SQLDataType.DECIMAL(20, 10), this, "");

    /**
     * Create a <code>pacnode.referrals</code> table reference
     */
    public Referrals() {
        this(DSL.name("referrals"), null);
    }

    /**
     * Create an aliased <code>pacnode.referrals</code> table reference
     */
    public Referrals(String alias) {
        this(DSL.name(alias), REFERRALS);
    }

    /**
     * Create an aliased <code>pacnode.referrals</code> table reference
     */
    public Referrals(Name alias) {
        this(alias, REFERRALS);
    }

    private Referrals(Name alias, Table<ReferralsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Referrals(Name alias, Table<ReferralsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReferralsRecord> getRecordType() {
        return ReferralsRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pacnode.PACNODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REFERRALS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReferralsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_REFERRALS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReferralsRecord> getPrimaryKey() {
        return Keys.KEY_REFERRALS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReferralsRecord>> getKeys() {
        return Arrays.<UniqueKey<ReferralsRecord>>asList(Keys.KEY_REFERRALS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Referrals as(String alias) {
        return new Referrals(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Referrals as(Name alias) {
        return new Referrals(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Referrals rename(String name) {
        return new Referrals(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Referrals rename(Name name) {
        return new Referrals(name, null);
    }
}
