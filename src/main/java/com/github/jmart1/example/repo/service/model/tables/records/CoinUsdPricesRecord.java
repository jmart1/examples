/*
 * This file is generated by jOOQ.
 */
package com.github.jmart1.example.repo.service.model.tables.records;


import com.github.jmart1.example.repo.service.model.tables.CoinUsdPrices;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.sql.Date;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class CoinUsdPricesRecord extends UpdatableRecordImpl<CoinUsdPricesRecord> implements Record9<Date, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Long, Long, String> {

    private static final long serialVersionUID = 867042107;

    /**
     * Setter for <code>pacnode.coin_usd_prices.date</code>.
     */
    public void setDate(Date value) {
        set(0, value);
    }

    /**
     * Getter for <code>pacnode.coin_usd_prices.date</code>.
     */
    public Date getDate() {
        return (Date) get(0);
    }

    /**
     * Create a detached CoinUsdPricesRecord
     */
    public CoinUsdPricesRecord() {
        super(CoinUsdPrices.COIN_USD_PRICES);
    }

    /**
     * Getter for <code>pacnode.coin_usd_prices.open</code>.
     */
    public BigDecimal getOpen() {
        return (BigDecimal) get(1);
    }

    /**
     * Create a detached, initialised CoinUsdPricesRecord
     */
    public CoinUsdPricesRecord(Date date, BigDecimal open, BigDecimal high, BigDecimal low, BigDecimal close, BigDecimal averageValue, Long volume, Long marketCap, String coinName) {
        super(CoinUsdPrices.COIN_USD_PRICES);

        set(0, date);
        set(1, open);
        set(2, high);
        set(3, low);
        set(4, close);
        set(5, averageValue);
        set(6, volume);
        set(7, marketCap);
        set(8, coinName);
    }

    /**
     * Getter for <code>pacnode.coin_usd_prices.high</code>.
     */
    public BigDecimal getHigh() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>pacnode.coin_usd_prices.low</code>.
     */
    public void setLow(BigDecimal value) {
        set(3, value);
    }

    /**
     * Setter for <code>pacnode.coin_usd_prices.open</code>.
     */
    public void setOpen(BigDecimal value) {
        set(1, value);
    }

    /**
     * Setter for <code>pacnode.coin_usd_prices.high</code>.
     */
    public void setHigh(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>pacnode.coin_usd_prices.close</code>.
     */
    public BigDecimal getClose() {
        return (BigDecimal) get(4);
    }

    /**
     * Getter for <code>pacnode.coin_usd_prices.low</code>.
     */
    public BigDecimal getLow() {
        return (BigDecimal) get(3);
    }

    /**
     * Getter for <code>pacnode.coin_usd_prices.average_value</code>.
     */
    public BigDecimal getAverageValue() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>pacnode.coin_usd_prices.close</code>.
     */
    public void setClose(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>pacnode.coin_usd_prices.volume</code>.
     */
    public Long getVolume() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>pacnode.coin_usd_prices.average_value</code>.
     */
    public void setAverageValue(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>pacnode.coin_usd_prices.market_cap</code>.
     */
    public Long getMarketCap() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>pacnode.coin_usd_prices.volume</code>.
     */
    public void setVolume(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>pacnode.coin_usd_prices.coin_name</code>.
     */
    public String getCoinName() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<Date, BigDecimal, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Date, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Long, Long, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Date, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Long, Long, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * Setter for <code>pacnode.coin_usd_prices.market_cap</code>.
     */
    public void setMarketCap(Long value) {
        set(7, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field2() {
        return CoinUsdPrices.COIN_USD_PRICES.OPEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return CoinUsdPrices.COIN_USD_PRICES.HIGH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return CoinUsdPrices.COIN_USD_PRICES.LOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return CoinUsdPrices.COIN_USD_PRICES.CLOSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field6() {
        return CoinUsdPrices.COIN_USD_PRICES.AVERAGE_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return CoinUsdPrices.COIN_USD_PRICES.VOLUME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return CoinUsdPrices.COIN_USD_PRICES.MARKET_CAP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return CoinUsdPrices.COIN_USD_PRICES.COIN_NAME;
    }

    /**
     * Setter for <code>pacnode.coin_usd_prices.coin_name</code>.
     */
    public void setCoinName(String value) {
        set(8, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component2() {
        return getOpen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component3() {
        return getHigh();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getLow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component5() {
        return getClose();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component6() {
        return getAverageValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getVolume();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component8() {
        return getMarketCap();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getCoinName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field1() {
        return CoinUsdPrices.COIN_USD_PRICES.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value2() {
        return getOpen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getHigh();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getLow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getClose();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value6() {
        return getAverageValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getVolume();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value8() {
        return getMarketCap();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getCoinName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component1() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoinUsdPricesRecord value2(BigDecimal value) {
        setOpen(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoinUsdPricesRecord value3(BigDecimal value) {
        setHigh(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoinUsdPricesRecord value4(BigDecimal value) {
        setLow(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value1() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoinUsdPricesRecord value1(Date value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoinUsdPricesRecord value7(Long value) {
        setVolume(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoinUsdPricesRecord value8(Long value) {
        setMarketCap(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoinUsdPricesRecord value9(String value) {
        setCoinName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoinUsdPricesRecord values(Date value1, BigDecimal value2, BigDecimal value3, BigDecimal value4, BigDecimal value5, BigDecimal value6, Long value7, Long value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public CoinUsdPricesRecord value5(BigDecimal value) {
        setClose(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoinUsdPricesRecord value6(BigDecimal value) {
        setAverageValue(value);
        return this;
    }
}
