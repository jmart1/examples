/*
 * This file is generated by jOOQ.
 */
package com.github.jmart1.example.repo.website.model.tables.records;


import com.github.jmart1.example.repo.website.model.tables.CurrentAccountRewards;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class CurrentAccountRewardsRecord extends UpdatableRecordImpl<CurrentAccountRewardsRecord> implements Record5<Integer, Double, Double, Double, Timestamp> {

    private static final long serialVersionUID = -1381001630;

    /**
     * Create a detached CurrentAccountRewardsRecord
     */
    public CurrentAccountRewardsRecord() {
        super(CurrentAccountRewards.CURRENT_ACCOUNT_REWARDS);
    }

    /**
     * Create a detached, initialised CurrentAccountRewardsRecord
     */
    public CurrentAccountRewardsRecord(Integer accountId, Double rewardAmount, Double feeAmount, Double withdrawalAmount, Timestamp lastPayoutDate) {
        super(CurrentAccountRewards.CURRENT_ACCOUNT_REWARDS);

        set(0, accountId);
        set(1, rewardAmount);
        set(2, feeAmount);
        set(3, withdrawalAmount);
        set(4, lastPayoutDate);
    }

    /**
     * Getter for <code>pacnode.current_account_rewards.account_id</code>.
     */
    public Integer getAccountId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>pacnode.current_account_rewards.account_id</code>.
     */
    public void setAccountId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>pacnode.current_account_rewards.reward_amount</code>.
     */
    public Double getRewardAmount() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>pacnode.current_account_rewards.reward_amount</code>.
     */
    public void setRewardAmount(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>pacnode.current_account_rewards.fee_amount</code>.
     */
    public Double getFeeAmount() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>pacnode.current_account_rewards.fee_amount</code>.
     */
    public void setFeeAmount(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>pacnode.current_account_rewards.withdrawal_amount</code>.
     */
    public Double getWithdrawalAmount() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>pacnode.current_account_rewards.withdrawal_amount</code>.
     */
    public void setWithdrawalAmount(Double value) {
        set(3, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>pacnode.current_account_rewards.last_payout_date</code>.
     */
    public Timestamp getLastPayoutDate() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>pacnode.current_account_rewards.last_payout_date</code>.
     */
    public void setLastPayoutDate(Timestamp value) {
        set(4, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Double, Double, Double, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Double, Double, Double, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CurrentAccountRewards.CURRENT_ACCOUNT_REWARDS.ACCOUNT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field2() {
        return CurrentAccountRewards.CURRENT_ACCOUNT_REWARDS.REWARD_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return CurrentAccountRewards.CURRENT_ACCOUNT_REWARDS.FEE_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return CurrentAccountRewards.CURRENT_ACCOUNT_REWARDS.WITHDRAWAL_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return CurrentAccountRewards.CURRENT_ACCOUNT_REWARDS.LAST_PAYOUT_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component2() {
        return getRewardAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getFeeAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getWithdrawalAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getLastPayoutDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value2() {
        return getRewardAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getFeeAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getWithdrawalAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getLastPayoutDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrentAccountRewardsRecord value1(Integer value) {
        setAccountId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrentAccountRewardsRecord value2(Double value) {
        setRewardAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrentAccountRewardsRecord value3(Double value) {
        setFeeAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrentAccountRewardsRecord value4(Double value) {
        setWithdrawalAmount(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrentAccountRewardsRecord value5(Timestamp value) {
        setLastPayoutDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrentAccountRewardsRecord values(Integer value1, Double value2, Double value3, Double value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }
}
