/*
 * This file is generated by jOOQ.
 */
package com.github.jmart1.example.repo.website.model.tables;


import com.github.jmart1.example.repo.website.model.Indexes;
import com.github.jmart1.example.repo.website.model.Keys;
import com.github.jmart1.example.repo.website.model.Pacnode;
import com.github.jmart1.example.repo.website.model.tables.records.MasternodePayoutsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class MasternodePayouts extends TableImpl<MasternodePayoutsRecord> {

    /**
     * The reference instance of <code>pacnode.masternode_payouts</code>
     */
    public static final MasternodePayouts MASTERNODE_PAYOUTS = new MasternodePayouts();
    private static final long serialVersionUID = 1761230079;
    /**
     * The column <code>pacnode.masternode_payouts.mn_id</code>.
     */
    public final TableField<MasternodePayoutsRecord, Integer> MN_ID = createField("mn_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>pacnode.masternode_payouts.payout_date</code>.
     */
    public final TableField<MasternodePayoutsRecord, Date> PAYOUT_DATE = createField("payout_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");
    /**
     * The column <code>pacnode.masternode_payouts.total_server_fees</code>.
     */
    public final TableField<MasternodePayoutsRecord, Double> TOTAL_SERVER_FEES = createField("total_server_fees", org.jooq.impl.SQLDataType.DOUBLE, this, "");
    /**
     * The column <code>pacnode.masternode_payouts.total_pacnode_fees</code>.
     */
    public final TableField<MasternodePayoutsRecord, Double> TOTAL_PACNODE_FEES = createField("total_pacnode_fees", org.jooq.impl.SQLDataType.DOUBLE, this, "");
    /**
     * The column <code>pacnode.masternode_payouts.inserted_date</code>.
     */
    public final TableField<MasternodePayoutsRecord, Timestamp> INSERTED_DATE = createField("inserted_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");
    /**
     * The column <code>pacnode.masternode_payouts.total_rewards</code>.
     */
    public final TableField<MasternodePayoutsRecord, BigDecimal> TOTAL_REWARDS = createField("total_rewards", org.jooq.impl.SQLDataType.DECIMAL(30, 10), this, "");

    /**
     * Create a <code>pacnode.masternode_payouts</code> table reference
     */
    public MasternodePayouts() {
        this(DSL.name("masternode_payouts"), null);
    }

    /**
     * Create an aliased <code>pacnode.masternode_payouts</code> table reference
     */
    public MasternodePayouts(String alias) {
        this(DSL.name(alias), MASTERNODE_PAYOUTS);
    }

    /**
     * Create an aliased <code>pacnode.masternode_payouts</code> table reference
     */
    public MasternodePayouts(Name alias) {
        this(alias, MASTERNODE_PAYOUTS);
    }

    private MasternodePayouts(Name alias, Table<MasternodePayoutsRecord> aliased) {
        this(alias, aliased, null);
    }

    private MasternodePayouts(Name alias, Table<MasternodePayoutsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MasternodePayoutsRecord> getRecordType() {
        return MasternodePayoutsRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pacnode.PACNODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MASTERNODE_PAYOUTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MasternodePayoutsRecord> getPrimaryKey() {
        return Keys.KEY_MASTERNODE_PAYOUTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MasternodePayoutsRecord>> getKeys() {
        return Arrays.<UniqueKey<MasternodePayoutsRecord>>asList(Keys.KEY_MASTERNODE_PAYOUTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MasternodePayouts as(String alias) {
        return new MasternodePayouts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MasternodePayouts as(Name alias) {
        return new MasternodePayouts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MasternodePayouts rename(String name) {
        return new MasternodePayouts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MasternodePayouts rename(Name name) {
        return new MasternodePayouts(name, null);
    }
}
