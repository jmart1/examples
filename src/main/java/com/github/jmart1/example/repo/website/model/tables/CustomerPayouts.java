/*
 * This file is generated by jOOQ.
 */
package com.github.jmart1.example.repo.website.model.tables;


import com.github.jmart1.example.repo.website.model.Pacnode;
import com.github.jmart1.example.repo.website.model.tables.records.CustomerPayoutsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class CustomerPayouts extends TableImpl<CustomerPayoutsRecord> {

    /**
     * The reference instance of <code>pacnode.customer_payouts</code>
     */
    public static final CustomerPayouts CUSTOMER_PAYOUTS = new CustomerPayouts();
    private static final long serialVersionUID = 458675936;
    /**
     * The column <code>pacnode.customer_payouts.mn_id</code>.
     */
    public final TableField<CustomerPayoutsRecord, Integer> MN_ID = createField("mn_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>pacnode.customer_payouts.payout_date</code>.
     */
    public final TableField<CustomerPayoutsRecord, Timestamp> PAYOUT_DATE = createField("payout_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");
    /**
     * The column <code>pacnode.customer_payouts.account_id</code>.
     */
    public final TableField<CustomerPayoutsRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>pacnode.customer_payouts.reward_payout</code>.
     */
    public final TableField<CustomerPayoutsRecord, Double> REWARD_PAYOUT = createField("reward_payout", org.jooq.impl.SQLDataType.DOUBLE, this, "");
    /**
     * The column <code>pacnode.customer_payouts.fee_amount</code>.
     */
    public final TableField<CustomerPayoutsRecord, Double> FEE_AMOUNT = createField("fee_amount", org.jooq.impl.SQLDataType.DOUBLE, this, "");
    /**
     * The column <code>pacnode.customer_payouts.server_cost_amount</code>.
     */
    public final TableField<CustomerPayoutsRecord, Double> SERVER_COST_AMOUNT = createField("server_cost_amount", org.jooq.impl.SQLDataType.DOUBLE, this, "");
    /**
     * The column <code>pacnode.customer_payouts.payout_address</code>.
     */
    public final TableField<CustomerPayoutsRecord, String> PAYOUT_ADDRESS = createField("payout_address", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");
    /**
     * The column <code>pacnode.customer_payouts.inserted_date</code>.
     */
    public final TableField<CustomerPayoutsRecord, Timestamp> INSERTED_DATE = createField("inserted_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");
    /**
     * The column <code>pacnode.customer_payouts.paid_out</code>.
     */
    public final TableField<CustomerPayoutsRecord, Byte> PAID_OUT = createField("paid_out", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");
    /**
     * The column <code>pacnode.customer_payouts.reinvest</code>.
     */
    public final TableField<CustomerPayoutsRecord, Byte> REINVEST = createField("reinvest", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");
    /**
     * The column <code>pacnode.customer_payouts.request_id</code>.
     */
    public final TableField<CustomerPayoutsRecord, Integer> REQUEST_ID = createField("request_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>pacnode.customer_payouts</code> table reference
     */
    public CustomerPayouts() {
        this(DSL.name("customer_payouts"), null);
    }

    /**
     * Create an aliased <code>pacnode.customer_payouts</code> table reference
     */
    public CustomerPayouts(String alias) {
        this(DSL.name(alias), CUSTOMER_PAYOUTS);
    }

    /**
     * Create an aliased <code>pacnode.customer_payouts</code> table reference
     */
    public CustomerPayouts(Name alias) {
        this(alias, CUSTOMER_PAYOUTS);
    }

    private CustomerPayouts(Name alias, Table<CustomerPayoutsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomerPayouts(Name alias, Table<CustomerPayoutsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomerPayoutsRecord> getRecordType() {
        return CustomerPayoutsRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pacnode.PACNODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerPayouts as(String alias) {
        return new CustomerPayouts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerPayouts as(Name alias) {
        return new CustomerPayouts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerPayouts rename(String name) {
        return new CustomerPayouts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerPayouts rename(Name name) {
        return new CustomerPayouts(name, null);
    }
}
