/*
 * This file is generated by jOOQ.
 */
package com.github.jmart1.example.repo.website.model.tables;


import com.github.jmart1.example.repo.website.model.Pacnode;
import com.github.jmart1.example.repo.website.model.tables.records.PropInfoVotesRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigInteger;
import java.sql.Timestamp;


/**
 * VIEW
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PropInfoVotes extends TableImpl<PropInfoVotesRecord> {

    /**
     * The reference instance of <code>pacnode.prop_info_votes</code>
     */
    public static final PropInfoVotes PROP_INFO_VOTES = new PropInfoVotes();
    private static final long serialVersionUID = -919223390;
    /**
     * The column <code>pacnode.prop_info_votes.hash</code>.
     */
    public final TableField<PropInfoVotesRecord, String> HASH = createField("hash", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");
    /**
     * The column <code>pacnode.prop_info_votes.name</code>.
     */
    public final TableField<PropInfoVotesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");
    /**
     * The column <code>pacnode.prop_info_votes.amount</code>.
     */
    public final TableField<PropInfoVotesRecord, Double> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DOUBLE, this, "");
    /**
     * The column <code>pacnode.prop_info_votes.cycles</code>.
     */
    public final TableField<PropInfoVotesRecord, Integer> CYCLES = createField("cycles", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column <code>pacnode.prop_info_votes.start_date</code>.
     */
    public final TableField<PropInfoVotesRecord, Timestamp> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");
    /**
     * The column <code>pacnode.prop_info_votes.end_date</code>.
     */
    public final TableField<PropInfoVotesRecord, Timestamp> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");
    /**
     * The column <code>pacnode.prop_info_votes.create_date</code>.
     */
    public final TableField<PropInfoVotesRecord, Timestamp> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");
    /**
     * The column <code>pacnode.prop_info_votes.url</code>.
     */
    public final TableField<PropInfoVotesRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");
    /**
     * The column <code>pacnode.prop_info_votes.yes_count</code>.
     */
    public final TableField<PropInfoVotesRecord, BigInteger> YES_COUNT = createField("yes_count", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(25), this, "");
    /**
     * The column <code>pacnode.prop_info_votes.no_count</code>.
     */
    public final TableField<PropInfoVotesRecord, BigInteger> NO_COUNT = createField("no_count", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(25), this, "");
    /**
     * The column <code>pacnode.prop_info_votes.abstain_count</code>.
     */
    public final TableField<PropInfoVotesRecord, BigInteger> ABSTAIN_COUNT = createField("abstain_count", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(25), this, "");

    /**
     * Create a <code>pacnode.prop_info_votes</code> table reference
     */
    public PropInfoVotes() {
        this(DSL.name("prop_info_votes"), null);
    }

    /**
     * Create an aliased <code>pacnode.prop_info_votes</code> table reference
     */
    public PropInfoVotes(String alias) {
        this(DSL.name(alias), PROP_INFO_VOTES);
    }

    /**
     * Create an aliased <code>pacnode.prop_info_votes</code> table reference
     */
    public PropInfoVotes(Name alias) {
        this(alias, PROP_INFO_VOTES);
    }

    private PropInfoVotes(Name alias, Table<PropInfoVotesRecord> aliased) {
        this(alias, aliased, null);
    }

    private PropInfoVotes(Name alias, Table<PropInfoVotesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PropInfoVotesRecord> getRecordType() {
        return PropInfoVotesRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pacnode.PACNODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PropInfoVotes as(String alias) {
        return new PropInfoVotes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PropInfoVotes as(Name alias) {
        return new PropInfoVotes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PropInfoVotes rename(String name) {
        return new PropInfoVotes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PropInfoVotes rename(Name name) {
        return new PropInfoVotes(name, null);
    }
}
