/*
 * This file is generated by jOOQ.
 */
package com.github.jmart1.example.repo.website.model.tables;


import com.github.jmart1.example.repo.website.model.Indexes;
import com.github.jmart1.example.repo.website.model.Keys;
import com.github.jmart1.example.repo.website.model.Pacnode;
import com.github.jmart1.example.repo.website.model.tables.records.CustomerMasternodeMappingRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class CustomerMasternodeMapping extends TableImpl<CustomerMasternodeMappingRecord> {

    /**
     * The reference instance of <code>pacnode.customer_masternode_mapping</code>
     */
    public static final CustomerMasternodeMapping CUSTOMER_MASTERNODE_MAPPING = new CustomerMasternodeMapping();
    private static final long serialVersionUID = -874418609;
    /**
     * The column <code>pacnode.customer_masternode_mapping.account_id</code>.
     */
    public final TableField<CustomerMasternodeMappingRecord, String> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");
    /**
     * The column <code>pacnode.customer_masternode_mapping.mn_id</code>.
     */
    public final TableField<CustomerMasternodeMappingRecord, Integer> MN_ID = createField("mn_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>pacnode.customer_masternode_mapping.invested_amount</code>.
     */
    public final TableField<CustomerMasternodeMappingRecord, BigDecimal> INVESTED_AMOUNT = createField("invested_amount", org.jooq.impl.SQLDataType.DECIMAL(30, 10), this, "");

    /**
     * Create a <code>pacnode.customer_masternode_mapping</code> table reference
     */
    public CustomerMasternodeMapping() {
        this(DSL.name("customer_masternode_mapping"), null);
    }

    /**
     * Create an aliased <code>pacnode.customer_masternode_mapping</code> table reference
     */
    public CustomerMasternodeMapping(String alias) {
        this(DSL.name(alias), CUSTOMER_MASTERNODE_MAPPING);
    }

    /**
     * Create an aliased <code>pacnode.customer_masternode_mapping</code> table reference
     */
    public CustomerMasternodeMapping(Name alias) {
        this(alias, CUSTOMER_MASTERNODE_MAPPING);
    }

    private CustomerMasternodeMapping(Name alias, Table<CustomerMasternodeMappingRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomerMasternodeMapping(Name alias, Table<CustomerMasternodeMappingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomerMasternodeMappingRecord> getRecordType() {
        return CustomerMasternodeMappingRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pacnode.PACNODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CUSTOMER_MASTERNODE_MAPPING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CustomerMasternodeMappingRecord> getPrimaryKey() {
        return Keys.KEY_CUSTOMER_MASTERNODE_MAPPING_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CustomerMasternodeMappingRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomerMasternodeMappingRecord>>asList(Keys.KEY_CUSTOMER_MASTERNODE_MAPPING_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerMasternodeMapping as(String alias) {
        return new CustomerMasternodeMapping(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerMasternodeMapping as(Name alias) {
        return new CustomerMasternodeMapping(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerMasternodeMapping rename(String name) {
        return new CustomerMasternodeMapping(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerMasternodeMapping rename(Name name) {
        return new CustomerMasternodeMapping(name, null);
    }
}
